package dashboard

import (
	"fmt"
	"strconv"

	"github.com/TimRobillard/handicap_tracker/store"
	"github.com/TimRobillard/handicap_tracker/views/layout"
	"github.com/TimRobillard/handicap_tracker/views/dashboard/components"
)

templ Error(errs []string) {
	for _, e := range(errs) {
		<div>{ e }</div>
	}
}

templ CourseSelect(courses *[]store.Course) {
	if courses != nil {
		<select hx-get="/courses/score" hx-trigger="change" name="course" hx-swap="outerHTML">
			<option>Select a course</option>
			for _, course := range(*courses) {
				<option value={ strconv.Itoa(course.Id) }>{ course.Name }</option>
			}
		</select>
	} else {
		<div hx-get="/courses/select" hx-trigger="intersect once">loading</div>
	}
}

templ score(num, par string) {
	<div class="flex flex-row md:flex-col flex-1 gap-0.5">
		<label for={ fmt.Sprintf("hole-%s", num) } class="min-w-[15%] bg-green-800 text-center font-semibold text-white flex-1 text-sm">{ num }</label>
		<label for={ fmt.Sprintf("hole-%s", num) } class="min-w-[15%] bg-sky-600 flex-1 text-white font-semibold text-center text-sm">{ par }</label>
		<input id={ fmt.Sprintf("hole-%s", num) } name={ fmt.Sprintf("hole-%s", num) } placeholder={ par } class="w-full bg-white flex-2 md:flex-1 text-center font-semibold text-sm" required/>
		<div class="hidden md:block w-full bg-white flex-2 md:flex-1 text-center font-semibold text-white text-sm">_</div>
		<div class="hidden md:block w-full bg-white flex-2 md:flex-1 text-center font-semibold text-white text-sm">_</div>
		<div class="hidden md:block w-full bg-white flex-2 md:flex-1 text-center font-semibold text-white text-sm">_</div>
	</div>
}

templ ScoreForm(user *store.User, course *store.Course) {
	<form
		id="score-form"
		class="flex flex-col gap-4"
		hx-post="/rounds"
		hx-ext="loading-states, response-targets"
		hx-target-401="#score-errors"
	>
		<div>
			<a href="/dashboard/score" tabindex="2">
				<i class="fa-solid fa-arrow-left"></i>
			</a>
			<h4 class="text-xl">{ course.Name }</h4>
		</div>
		<div class="flex flex-col md:flex-row bg-slate-900 gap-0.5 p-0.5 rounded-sm">
			<div class="flex flex-row flex-1 md:flex-col gap-0.5">
				<div class="min-w-[15%] bg-green-800 font-semibold text-white text-center">Hole</div>
				<div class="min-w-[15%] bg-sky-600 font-semibold text-white text-center">Par</div>
				<div class="w-full bg-white font-semibold text-center flex-2 md:flex-1"><span class="block md:hidden">Score</span><span class="hidden md:block">{ user.ScoreCardName() }</span></div>
				<div class="hidden md:block w-full bg-white flex-2 md:flex-1 text-center font-semibold text-white">_</div>
				<div class="hidden md:block w-full bg-white flex-2 md:flex-1 text-center font-semibold text-white">_</div>
				<div class="hidden md:block w-full bg-white flex-2 md:flex-1 text-center font-semibold text-white">_</div>
			</div>
			for i, par := range(course.Front) {
				@score(strconv.Itoa(i+1), strconv.Itoa(par))
			}
			<div class="flex flex-row md:flex-col flex-1 gap-0.5">
				<div class="min-w-[15%] bg-green-800 font-semibold text-white text-center flex-1">Out</div>
				<div class="min-w-[15%] bg-sky-600 text-center font-semibold text-white flex-1">{ strconv.Itoa(course.FrontPar()) }</div>
				<div id="score-out" class="w-full bg-white font-semibold text-center flex-2 md:flex-1">0</div>
				<div class="hidden md:block w-full bg-white flex-2 md:flex-1 text-center font-semibold text-white">_</div>
				<div class="hidden md:block w-full bg-white flex-2 md:flex-1 text-center font-semibold text-white">_</div>
				<div class="hidden md:block w-full bg-white flex-2 md:flex-1 text-center font-semibold text-white">_</div>
			</div>
		</div>
		<div class="flex flex-col md:flex-row bg-black gap-0.5 p-0.5 rounded-sm">
			<div class="flex flex-row flex-1 md:flex-col gap-0.5">
				<div class="min-w-[15%] bg-green-800 font-semibold text-white text-center">Hole</div>
				<div class="min-w-[15%] bg-sky-600 font-semibold text-white text-center">Par</div>
				<div class="w-full bg-white font-semibold text-center flex-2 md:flex-1"><span class="block md:hidden">Score</span><span class="hidden md:block">{ user.ScoreCardName() }</span></div>
				<div class="hidden md:block w-full bg-white flex-2 md:flex-1 text-center font-semibold text-white">_</div>
				<div class="hidden md:block w-full bg-white flex-2 md:flex-1 text-center font-semibold text-white">_</div>
				<div class="hidden md:block w-full bg-white flex-2 md:flex-1 text-center font-semibold text-white">_</div>
			</div>
			for i, par := range(course.Back) {
				@score(strconv.Itoa(i+10), strconv.Itoa(par))
			}
			<div class="flex flex-row md:flex-col flex-1 gap-0.5">
				<div class="min-w-[15%] bg-green-800 font-semibold text-white text-center flex-1">In</div>
				<div class="min-w-[15%] bg-sky-600 text-center font-semibold text-white flex-1">{ strconv.Itoa(course.BackPar()) }</div>
				<div id="score-in" class="w-full bg-white font-semibold text-center flex-2 md:flex-1">0</div>
				<div class="hidden md:block w-full bg-white flex-2 md:flex-1 text-center font-semibold text-white">_</div>
				<div class="hidden md:block w-full bg-white flex-2 md:flex-1 text-center font-semibold text-white">_</div>
				<div class="hidden md:block w-full bg-white flex-2 md:flex-1 text-center font-semibold text-white">_</div>
			</div>
		</div>
		<div id="score-errors"></div>
		<button
			type="submit"
			class="flex justify-center bg-green-800 text-white py-2 font-semibold rounded-md hover:bg-green-900 focus-within:bg-green-900 focus-within:outline-green-900"
			data-loading-class="opacity-80"
			data-loading-disabl
		>Save round of&nbsp<span id="save-tot">72</span></button>
	</form>
}

templ ScorePage(recents []*store.UICourse) {
	@layouts.Base("Add Score | Golf IndX") {
		<main class="h-auto min-h-screen w-screen bg-slate-200 flex flex-col sm:flex-row">
			@components.SideBar()
			<section class="w-full h-screen">
				<h2 class="text-2xl font-semibold text-center">Add Round</h2>
				<div id="container" class="flex flex-col p-4 gap-4">
					<form hx-get="/courses" class="flex gap-1" hx-trigger="submit, input changed delay:500ms from:input" hx-target="#course-list">
						<input name="keyword" placeholder="Search for course" class="px-4 py-6 rounded-l-md w-full"/>
						<button type="submit" class="px-8 bg-green-800 text-white rounded-r-md"><i class="fa-solid fa-magnifying-glass"></i></button>
					</form>
					<div id="course-list"></div>
				</div>
			</section>
		</main>
	}
}
